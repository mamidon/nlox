{
    var A = "global";
    
    fun VarDeclarationsRespectClosureScopes() {
        assert("A is bound to global scope initially", "global", A);
        
        fun Bar() {
            var A = "inner";
            
            assert("A is bound to inner scope", "inner", A);
        }
        
        assert("A is bound to global scope after declaring fun Bar", "global", A);
        Bar();
        assert("A outside of the closure is still bound to global scope", "global", A);
    }
    
    VarDeclarationsRespectClosureScopes();
}

{
    var A = "global";
    
    fun VarReferencesAreResolvedLexically() {
        fun inner(expected) {
            assert("A has the expected value from lexical resolution", expected, A);
        }
        
        inner("global");
        var A = "other";
        inner("global");
    }
    
    VarReferencesAreResolvedLexically();
}

{
    assert("math works", 4, 2 + 2);
    assert("math works", 12, 3 * (2 + 2));
    assert("math works", -2, 3 * (2 / -3));
    assert("math works", 2, 3 * (2 / 3));
}